# Alacritty Configuration
# For Fedora Workstation - Modern Dark Theme

[general]
# Import additional config files
import = []

[env]
TERM = "xterm-256color"

[window]
# Window dimensions
dimensions = { columns = 120, lines = 40 }

# Window padding
padding = { x = 12, y = 12 }

# Allow terminal resizing
dynamic_padding = true

# Window decorations
decorations = "full"

# Startup mode
startup_mode = "Windowed"

# Window title
title = "Alacritty"

# Window class
class = { instance = "Alacritty", general = "Alacritty" }

# Window opacity (80% transparency = 0.8 opacity)
opacity = 0.8

# Background blur
blur = true

[scrolling]
# History
history = 10000

# Scrolling distance
multiplier = 3

[font]
# Normal font with fallbacks for better compatibility
normal = { family = "Fira Code", style = "Regular" }

# Bold font
bold = { family = "Fira Code", style = "Bold" }

# Italic font
italic = { family = "Fira Code", style = "Italic" }

# Bold italic font
bold_italic = { family = "Fira Code", style = "Bold Italic" }

# Font size - slightly larger for better readability
size = 9.0

# Offset for better spacing
offset = { x = 0, y = 2 }

# Glyph offset for fine-tuning
glyph_offset = { x = 0, y = 0 }

# Built-in font fallbacks (used if Fira Code isn't available or renders poorly)
builtin_box_drawing = true

# Alternative font configurations (uncomment if Fira Code looks bad)
# [font]
# normal = { family = "JetBrains Mono", style = "Regular" }
# bold = { family = "JetBrains Mono", style = "Bold" }
# italic = { family = "JetBrains Mono", style = "Italic" }
# bold_italic = { family = "JetBrains Mono", style = "Bold Italic" }
# size = 11.0

# Or use system monospace font
# [font]
# normal = { family = "monospace", style = "Regular" }
# bold = { family = "monospace", style = "Bold" }
# italic = { family = "monospace", style = "Italic" }
# bold_italic = { family = "monospace", style = "Bold Italic" }
# size = 11.0

[colors]
# Default colors
[colors.primary]
background = "#1e1e2e"
foreground = "#cdd6f4"
dim_foreground = "#7f849c"
bright_foreground = "#cdd6f4"

# Cursor colors
[colors.cursor]
text = "#1e1e2e"
cursor = "#f5e0dc"

# Vi mode cursor colors
[colors.vi_mode_cursor]
text = "#1e1e2e"
cursor = "#b4befe"

# Search colors
[colors.search.matches]
foreground = "#1e1e2e"
background = "#a6adc8"

[colors.search.focused_match]
foreground = "#1e1e2e"
background = "#a6e3a1"

# Hint colors
[colors.hints.start]
foreground = "#1e1e2e"
background = "#f9e2af"

[colors.hints.end]
foreground = "#1e1e2e"
background = "#a6adc8"

# Line indicator colors
[colors.line_indicator]
foreground = "None"
background = "None"

# Footer bar colors
[colors.footer_bar]
foreground = "#1e1e2e"
background = "#a6adc8"

# Selection colors
[colors.selection]
text = "#1e1e2e"
background = "#f5e0dc"

# Normal colors
[colors.normal]
black = "#45475a"
red = "#f38ba8"
green = "#a6e3a1"
yellow = "#f9e2af"
blue = "#89b4fa"
magenta = "#f5c2e7"
cyan = "#94e2d5"
white = "#bac2de"

# Bright colors
[colors.bright]
black = "#585b70"
red = "#f38ba8"
green = "#a6e3a1"
yellow = "#f9e2af"
blue = "#89b4fa"
magenta = "#f5c2e7"
cyan = "#94e2d5"
white = "#a6adc8"

# Dim colors
[colors.dim]
black = "#45475a"
red = "#f38ba8"
green = "#a6e3a1"
yellow = "#f9e2af"
blue = "#89b4fa"
magenta = "#f5c2e7"
cyan = "#94e2d5"
white = "#bac2de"

[bell]
# Bell animation
animation = "EaseOutExpo"

# Bell duration
duration = 0

# Bell color
color = "#ffffff"

# Command executed when the bell is rung
command = "None"

[selection]
# This string contains all characters that are used as separators for "semantic words" in Alacritty
semantic_escape_chars = ",│`|:\"' ()[]{}<>\t"

# When set to true, selected text will be copied to the primary clipboard
save_to_clipboard = false

[cursor]
# Cursor style
style = { shape = "Block", blinking = "Off" }

# Vi mode cursor style
vi_mode_style = "None"

# Cursor blinking interval
blink_interval = 750

# Time after which cursor stops blinking
blink_timeout = 5

# If this is true, the cursor will be rendered as a hollow box when the window is not focused
unfocused_hollow = true

# Thickness of the cursor relative to the cell width
thickness = 0.15

[terminal]
# Controls the OSC 52 behavior for clipboard interactions
osc52 = "CopyPaste"

[mouse]
# If this is true, the cursor is temporarily hidden when typing
hide_when_typing = false

# Mouse bindings
bindings = []

[hints]
# Terminal hints can be used to find text or hyperlinks in the visible part of the terminal
alphabet = "jfkdls;ahgurieowpq"

# Enable specific hints
[[hints.enabled]]
regex = "(ipfs:|ipns:|magnet:|mailto:|gemini:|gopher:|https:|http:|news:|file:|git:|ssh:|ftp:)[^\u0000-\u001f\u007f-\u009f<>\"\\s{-}\\^⟨⟩`]+"
command = "xdg-open"
post_processing = true
mouse.enabled = true
binding = { key = "U", mods = "Control|Shift" }

[keyboard]
# Key bindings
bindings = [
    # Vi mode bindings
    { key = "Space", mods = "Shift|Control", action = "ToggleViMode" },
    { key = "Space", mods = "Shift|Control", mode = "Vi|~Search", action = "ScrollToBottom" },
    { key = "Escape", mode = "Vi|~Search", action = "ClearSelection" },
    { key = "I", mode = "Vi|~Search", action = "ToggleViMode" },
    { key = "I", mode = "Vi|~Search", action = "ScrollToBottom" },
    { key = "C", mods = "Control", mode = "Vi|~Search", action = "ToggleViMode" },
    { key = "Y", mods = "Control", mode = "Vi|~Search", action = "ScrollLineUp" },
    { key = "E", mods = "Control", mode = "Vi|~Search", action = "ScrollLineDown" },
    { key = "G", mode = "Vi|~Search", action = "ScrollToTop" },
    { key = "G", mods = "Shift", mode = "Vi|~Search", action = "ScrollToBottom" },
    { key = "B", mods = "Control", mode = "Vi|~Search", action = "ScrollPageUp" },
    { key = "F", mods = "Control", mode = "Vi|~Search", action = "ScrollPageDown" },
    { key = "U", mods = "Control", mode = "Vi|~Search", action = "ScrollHalfPageUp" },
    { key = "D", mods = "Control", mode = "Vi|~Search", action = "ScrollHalfPageDown" },
    { key = "Y", mode = "Vi|~Search", action = "Copy" },
    { key = "Y", mode = "Vi|~Search", action = "ClearSelection" },
    { key = "Copy", mode = "Vi|~Search", action = "ClearSelection" },
    { key = "V", mode = "Vi|~Search", action = "ToggleNormalSelection" },
    { key = "V", mods = "Shift", mode = "Vi|~Search", action = "ToggleLineSelection" },
    { key = "V", mods = "Control", mode = "Vi|~Search", action = "ToggleBlockSelection" },
    { key = "V", mods = "Alt", mode = "Vi|~Search", action = "ToggleSemanticSelection" },
    { key = "Return", mode = "Vi|~Search", action = "Open" },
    { key = "K", mode = "Vi|~Search", action = "Up" },
    { key = "J", mode = "Vi|~Search", action = "Down" },
    { key = "H", mode = "Vi|~Search", action = "Left" },
    { key = "L", mode = "Vi|~Search", action = "Right" },
    { key = "Up", mode = "Vi|~Search", action = "Up" },
    { key = "Down", mode = "Vi|~Search", action = "Down" },
    { key = "Left", mode = "Vi|~Search", action = "Left" },
    { key = "Right", mode = "Vi|~Search", action = "Right" },
    { key = "Key0", mode = "Vi|~Search", action = "First" },
    { key = "Key4", mods = "Shift", mode = "Vi|~Search", action = "Last" },
    { key = "Key6", mods = "Shift", mode = "Vi|~Search", action = "FirstOccupied" },
    { key = "H", mods = "Shift", mode = "Vi|~Search", action = "High" },
    { key = "M", mods = "Shift", mode = "Vi|~Search", action = "Middle" },
    { key = "L", mods = "Shift", mode = "Vi|~Search", action = "Low" },
    { key = "B", mode = "Vi|~Search", action = "SemanticLeft" },
    { key = "W", mode = "Vi|~Search", action = "SemanticRight" },
    { key = "E", mode = "Vi|~Search", action = "SemanticRightEnd" },
    { key = "B", mods = "Shift", mode = "Vi|~Search", action = "WordLeft" },
    { key = "W", mods = "Shift", mode = "Vi|~Search", action = "WordRight" },
    { key = "E", mods = "Shift", mode = "Vi|~Search", action = "WordRightEnd" },
    { key = "Key5", mods = "Shift", mode = "Vi|~Search", action = "Bracket" },
    { key = "Slash", mode = "Vi|~Search", action = "SearchForward" },
    { key = "Slash", mods = "Shift", mode = "Vi|~Search", action = "SearchBackward" },
    { key = "N", mode = "Vi|~Search", action = "SearchNext" },
    { key = "N", mods = "Shift", mode = "Vi|~Search", action = "SearchPrevious" },
    
    # Standard bindings
    { key = "Paste", action = "Paste" },
    { key = "Copy", action = "Copy" },
    { key = "L", mods = "Control", action = "ClearLogNotice" },
    { key = "L", mods = "Control", chars = "\f" },
    { key = "PageUp", mods = "Shift", action = "ScrollPageUp", mode = "~Alt" },
    { key = "PageDown", mods = "Shift", action = "ScrollPageDown", mode = "~Alt" },
    { key = "Home", mods = "Shift", action = "ScrollToTop", mode = "~Alt" },
    { key = "End", mods = "Shift", action = "ScrollToBottom", mode = "~Alt" },
    
    # Font size
    { key = "Equals", mods = "Control", action = "IncreaseFontSize" },
    { key = "Plus", mods = "Control", action = "IncreaseFontSize" },
    { key = "NumpadAdd", mods = "Control", action = "IncreaseFontSize" },
    { key = "Minus", mods = "Control", action = "DecreaseFontSize" },
    { key = "NumpadSubtract", mods = "Control", action = "DecreaseFontSize" },
    { key = "Key0", mods = "Control", action = "ResetFontSize" },
    { key = "Numpad0", mods = "Control", action = "ResetFontSize" },
]

[debug]
# Display the time it takes to redraw each frame
render_timer = false

# Keep the log file after quitting Alacritty
persistent_logging = false

# Log level
log_level = "Warn"

# Print all received window events
print_events = false
